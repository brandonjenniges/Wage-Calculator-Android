apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'jacoco-everywhere'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled true
    }

    defaultConfig {
        applicationId "com.payboy.brandon"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 11
        versionName "3.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        androidTest {
            setRoot('src/androidTest')
        }
        test {
            setRoot('src/test')
        }
    }

    buildTypes {
        release {
            testCoverageEnabled = false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def file = output.outputFile
                    def manifestParser = new com.android.builder.core.DefaultManifestParser()
                    output.outputFile = new File(file.parent, file.name.replace("app-release.apk", "Wage Calculator " + defaultConfig.versionName + ".apk"))
                    output.outputFile = new File(file.parentFile, "Wage Calculator " + defaultConfig.versionName + ".apk");
                }
            }
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            ext.enableCrashlytics = true
        }
        debug {
            testCoverageEnabled = true
            debuggable true
            // disable crashlytics
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            ext.enableCrashlytics = false
        }
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'

    //Butter Knife
    compile 'com.jakewharton:butterknife:7.0.1'

    // Crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    //Unit testing
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.19'

    //Instrumentation Testing
    androidTestCompile 'com.android.support:support-annotations:23.3.0'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.1') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
    }
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.1'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
}

configurations {
    androidTestCompile.exclude group: 'com.android.support', module: 'support-v4'
}